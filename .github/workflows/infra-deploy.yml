name: Azure OIDC Terraform Deploy

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_USE_OIDC: true

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Azure Login via OIDC
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.6

      # # üîç Static Analysis: TFLint
      # - name: Install TFLint
      #   run: |
      #     curl -s https://raw.githubusercontent.com/terraform-linters/tflint/master/install_linux.sh | bash
      #     tflint --version

      # - name: Run TFLint
      #   run: tflint --chdir=./terraform

      # - name: Install Checkov
      #   run: pip install checkov

      # - name: Run Checkov (Soft Fail)
      #   run: checkov -d . --soft-fail --quiet --compact
      #   working-directory: ./terraform

      # üöÄ Terraform Execution
      - name: Terraform Init
        run: terraform init -input=false
        working-directory: ./terraform

      # - name: Force Unlock Stale Terraform Lock (if any)
      #   run: terraform force-unlock -force  5bd82b52-0031-53ae-fe44-8f1ca0ee7c49
      #   working-directory: ./terraform

      - name: Terraform Validate
        run: terraform validate
        working-directory: ./terraform

      - name: Terraform Plan
        run: terraform plan -out=tfplan -var="subscription_id=${{ secrets.AZURE_SUBSCRIPTION_ID }}"
        working-directory: ./terraform

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan
        working-directory: ./terraform